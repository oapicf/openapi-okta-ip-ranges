/**
* OpenAPI Okta IP Ranges
* OpenAPI specification and a set of generated API clients for Okta IP Ranges
*
* The version of the OpenAPI document: 0.9.0-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Object containing IP ranges for a specific regional cell
 * @param ipRanges 
 */
object IpRangesJsonGet200ResponseValues : BaseTable<IpRangesJsonGet200ResponseValue>("_ip_ranges_json_get_200_response_value") {

    /**
     * Create an entity of type IpRangesJsonGet200ResponseValue from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = IpRangesJsonGet200ResponseValue(
        ipRanges = emptyList() /* kotlin.Array<kotlin.String>? */
    )

    /**
    * Assign all the columns from the entity of type IpRangesJsonGet200ResponseValue to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = IpRangesJsonGet200ResponseValue()
    * database.update(IpRangesJsonGet200ResponseValues, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: IpRangesJsonGet200ResponseValue) {
        this.apply {
        }
    }

}


object IpRangesJsonGet200ResponseValueIpRanges : BaseTable<Pair<kotlin.Long, kotlin.String>>("IpRangesJsonGet200ResponseValueIpRanges") {
    val ipRangesJsonGet200ResponseValue = long("ipRangesJsonGet200ResponseValue")
    val ipRanges = text("ipRanges")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[ipRangesJsonGet200ResponseValue] ?: 0, row[ipRanges] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(IpRangesJsonGet200ResponseValueIpRanges.ipRangesJsonGet200ResponseValue, entity.first)
            set(IpRangesJsonGet200ResponseValueIpRanges.ipRanges, entity.second)
        }
    }

}

