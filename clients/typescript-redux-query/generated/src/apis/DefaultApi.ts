// tslint:disable
/**
 * OpenAPI Okta IP Ranges
 * OpenAPI specification and a set of generated API clients for Okta IP Ranges
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { HttpMethods, QueryConfig, ResponseBody, ResponseText } from 'redux-query';
import * as runtime from '../runtime';
import {
    IpRangesJsonGet200ResponseValue,
    IpRangesJsonGet200ResponseValueFromJSON,
    IpRangesJsonGet200ResponseValueToJSON,
} from '../models';


/**
 * Returns IP ranges organized by regional cell names.
 * Retrieve Okta IP ranges
 */
function ipRangesJsonGetRaw<T>( requestConfig: runtime.TypedQueryConfig<T, { [key: string]: IpRangesJsonGet200ResponseValue; }> = {}): QueryConfig<T> {
    let queryParameters = null;


    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/ip_ranges.json`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(IpRangesJsonGet200ResponseValueFromJSON(body), text);
    }

    return config;
}

/**
* Returns IP ranges organized by regional cell names.
* Retrieve Okta IP ranges
*/
export function ipRangesJsonGet<T>( requestConfig?: runtime.TypedQueryConfig<T, { [key: string]: IpRangesJsonGet200ResponseValue; }>): QueryConfig<T> {
    return ipRangesJsonGetRaw( requestConfig);
}

