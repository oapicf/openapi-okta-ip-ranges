/**
 * OpenAPI Okta IP Ranges
 * OpenAPI specification and a set of generated API clients for Okta IP Ranges
 *
 * The version of the OpenAPI document: 0.10.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from 'rxjs/Observable';

import { map } from 'rxjs/operators';
import IHttpClient from '../IHttpClient';
import { inject, injectable } from 'inversify';
import { IAPIConfiguration } from '../IAPIConfiguration';
import { Headers } from '../Headers';
import HttpResponse from '../HttpResponse';

import { IpRangesJsonGet200ResponseValue } from '../model/ipRangesJsonGet200ResponseValue';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class DefaultService {
    private basePath: string = 'https://s3.amazonaws.com/okta-ip-ranges';

    constructor(@inject('IApiHttpClient') private httpClient: IHttpClient,
        @inject('IAPIConfiguration') private APIConfiguration: IAPIConfiguration ) {
        if(this.APIConfiguration.basePath)
            this.basePath = this.APIConfiguration.basePath;
    }

    /**
     * Retrieve Okta IP ranges
     * Returns IP ranges organized by regional cell names.
     
     */
    public ipRangesJsonGet(observe?: 'body', headers?: Headers): Observable<{ [key: string]: IpRangesJsonGet200ResponseValue; }>;
    public ipRangesJsonGet(observe?: 'response', headers?: Headers): Observable<HttpResponse<{ [key: string]: IpRangesJsonGet200ResponseValue; }>>;
    public ipRangesJsonGet(observe: any = 'body', headers: Headers = {}): Observable<any> {
        headers['Accept'] = 'application/json';

        const response: Observable<HttpResponse<{ [key: string]: IpRangesJsonGet200ResponseValue; }>> = this.httpClient.get(`${this.basePath}/ip_ranges.json`, headers);
        if (observe === 'body') {
               return response.pipe(
                   map((httpResponse: HttpResponse) => <{ [key: string]: IpRangesJsonGet200ResponseValue; }>(httpResponse.response))
               );
        }
        return response;
    }

}
