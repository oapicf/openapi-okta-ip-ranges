# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IpRangesJsonGet200ResponseValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_ranges: List[str]=None):
        """IpRangesJsonGet200ResponseValue - a model defined in OpenAPI

        :param ip_ranges: The ip_ranges of this IpRangesJsonGet200ResponseValue.
        """
        self.openapi_types = {
            'ip_ranges': List[str]
        }

        self.attribute_map = {
            'ip_ranges': 'ip_ranges'
        }

        self._ip_ranges = ip_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpRangesJsonGet200ResponseValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _ip_ranges_json_get_200_response_value of this IpRangesJsonGet200ResponseValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_ranges(self):
        """Gets the ip_ranges of this IpRangesJsonGet200ResponseValue.


        :return: The ip_ranges of this IpRangesJsonGet200ResponseValue.
        :rtype: List[str]
        """
        return self._ip_ranges

    @ip_ranges.setter
    def ip_ranges(self, ip_ranges):
        """Sets the ip_ranges of this IpRangesJsonGet200ResponseValue.


        :param ip_ranges: The ip_ranges of this IpRangesJsonGet200ResponseValue.
        :type ip_ranges: List[str]
        """

        self._ip_ranges = ip_ranges
