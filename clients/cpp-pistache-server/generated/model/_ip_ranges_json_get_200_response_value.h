/**
* OpenAPI Okta IP Ranges
* OpenAPI specification and a set of generated API clients for Okta IP Ranges
*
* The version of the OpenAPI document: 0.10.1-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * _ip_ranges_json_get_200_response_value.h
 *
 * Object containing IP ranges for a specific regional cell
 */

#ifndef _ip_ranges_json_get_200_response_value_H_
#define _ip_ranges_json_get_200_response_value_H_


#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Object containing IP ranges for a specific regional cell
/// </summary>
class  _ip_ranges_json_get_200_response_value
{
public:
    _ip_ranges_json_get_200_response_value();
    virtual ~_ip_ranges_json_get_200_response_value() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const _ip_ranges_json_get_200_response_value& rhs) const;
    bool operator!=(const _ip_ranges_json_get_200_response_value& rhs) const;

    /////////////////////////////////////////////
    /// _ip_ranges_json_get_200_response_value members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::string> getIpRanges() const;
    void setIpRanges(std::vector<std::string> const& value);
    bool ipRangesIsSet() const;
    void unsetIp_ranges();

    friend  void to_json(nlohmann::json& j, const _ip_ranges_json_get_200_response_value& o);
    friend  void from_json(const nlohmann::json& j, _ip_ranges_json_get_200_response_value& o);
protected:
    std::vector<std::string> m_Ip_ranges;
    bool m_Ip_rangesIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* _ip_ranges_json_get_200_response_value_H_ */
